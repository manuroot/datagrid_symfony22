<?php

namespace Application\ChangementsBundle\Entity;
use CalendR\Extension\Doctrine2\QueryHelper;
use Doctrine\ORM\EntityRepository;
use CalendR\Event\Provider\ProviderInterface;
//use CalendR\Extension\Doctrine2\EventRepository as EventRepositoryTrait;
/**
 * NotesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ChangementsRepository extends EntityRepository implements ProviderInterface{
//class ChangementsRepository extends EntityRepository{
 //use EventRepositoryTrait;
    public function myFindaAll() {
        return $this->createQueryBuilder('a')
                ->orderBy('id')
                        ->getQuery();

        //->getResult();
    }

    public function myFindAll() {
        return $this->createQueryBuilder('a')
                        ->leftJoin('a.idProjet', 'b')
                        ->leftJoin('a.idStatus', 'd')
                        ->leftJoin('a.demandeur', 'c')
                 ->leftJoin('a.idusers', 'e')
             //   ->groupby('e.nomUser')
                 ->add('orderBy', 'a.id DESC')
                        //   ->leftJoin('a.demandeur', 'c')
                        ->getQuery();
    }
   
 public function getEventsQueryBuilder(\DateTime $begin, \DateTime $end, array $options = array())
    {
        $qb = $this->createQueryBuilder('e');

        return QueryHelper::addEventQuery($qb, 'e.dateDebut', 'e.dateFin', $begin, $end)
            ->getQuery()
            ->getResult();
        ;
    }
     public function getEvents(\DateTime $begin, \DateTime $end, array $options = array())
    {
         return $this->getEventsQueryBuilder($begin, $end,$options);
      
    }
    
    /* public function createQueryBuilderForGetEvent(array $options)
    {
        // do what you want with the $option array
        return $this->createQueryBuilder('evt')
            ->setMaxResults(10)
        ;
    }

   
    public function getBeginFieldName()
    {
        return 'evt.beginDate';
    }

  
    public function getEndFieldName()
    {
        return 'evt.endDate';
    }*/
}

