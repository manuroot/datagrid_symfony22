<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\EservicesBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/bundles/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */
class EproduitCommentsRepository extends EntityRepository {

    public function myFind() {

        $query = $this->createQueryBuilder('a')
                ->leftJoin('a.proprietaire', 'b')
                ->leftJoin('a.categorie', 'c')
                ->leftJoin('a.idStatus', 'd')
                ->add('orderBy', 'a.id DESC')
                ->getQuery();
        return $query;
    }

    public function myFindAll($user_id) {

        $query = $this->createQueryBuilder('a')
                ->add('orderBy', 'a.id DESC')
                ->where('a.proprietaire = :proprietaire')
                ->leftJoin('a.proprietaire', 'b')
                ->leftJoin('a.categorie', 'c')
                ->leftJoin('a.idStatus', 'd')
                 ->setParameter('proprietaire', $user_id)
                ->getQuery();

        return $query;

        /* $query = $this->createQueryBuilder('a')
          ->add('orderBy', 'a.id DESC');

          if (isset($user_id)){
          $query=$query->where('a.proprietaire = :proprietaire')
          ->setParameter('proprietaire', $user_id);


          }
          ->getQuery(); */
        return $query;
    }
public function getCommentsForProduit($produitId, $approved = true)
    {
        $qb = $this->createQueryBuilder('c')
                   ->select('c')
                   ->where('c.produit = :produit_id')
                   ->addOrderBy('c.isComment')
                   ->addOrderBy('c.created')
                   ->setParameter('produit_id', $produitId);

        if (false === is_null($approved))
            $qb->andWhere('c.approved = :approved')
               ->setParameter('approved', $approved);

        return $qb->getQuery()
                  ->getResult();
    }
    public function myFindOtherAll($user_id) {

        $query = $this->createQueryBuilder('a')
                ->where('a.proprietaire <> :proprietaire')
                ->setParameter('proprietaire', $user_id)
                //  ->where('a.proprietaire.getId = :idproprietaire')
                 //       ->setParameter('idproprietaire', '2')
                   ->leftJoin('a.proprietaire', 'b')
                ->leftJoin('a.categorie', 'c')
                ->leftJoin('a.idStatus', 'd')
             
                ->add('orderBy', 'a.id DESC')
                ->getQuery();
        return $query;
    }

    /* public function myFindAll($user_id) {

      $query = $this->createQueryBuilder('a')
      ->where('a.demandeur = :demandeur')
      ->setParameter('demandeur', $user_id)
      //->orderBy('p.price', 'ASC')
      ->getQuery();
      return $query;

      } */
}