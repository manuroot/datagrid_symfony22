<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\EservicesBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use APY\DataGridBundle\Grid\Mapping as GRID;
use Symfony\Component\Validator\Mapping\ClassMetadata;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/bundles/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */

/**
 * Changements
 *
 * @ORM\Table(name="eproduits_comments")
 * @ORM\Entity(repositoryClass="Application\EservicesBundle\Repository\EproduitCommentsRepository")
 */

class EproduitComments {

   /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

   
    /**
     * @var \Application\Sonata\UserBundle\Entity\User
     *
     * @ORM\ManyToOne(targetEntity="Application\Sonata\UserBundle\Entity\User")
     * @ORM\OrderBy({"username" = "ASC"})
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="user", referencedColumnName="id")
     * })
     */
    private $user;
    
    
    /**
     * @var string
     * @Assert\NotBlank(message="Vous devez entrer un nom de user")
     * @ORM\Column(type="text")
     */
    protected $comment;

    /**
     * @ORM\Column(type="boolean")
     */
    protected $approved;

    /**
     * @ORM\Column(type="boolean")
     */
    protected $isComment;

    
    
    /**
     * @ORM\ManyToOne(targetEntity="Eproduit", inversedBy="comments")
     * @ORM\JoinColumn(name="produit_id", referencedColumnName="id")
     */
    protected $produit;

    /**
     * @ORM\Column(type="datetime")
     */
    protected $created;

    /**
     * @ORM\Column(type="datetime")
     */
    protected $updated;

    public function __construct()
    {
        $this->setCreated(new \DateTime());
        $this->setUpdated(new \DateTime());
        $this->setApproved(true);
        $this->setIscomment(false);
    }

    /**
     * @ORM\preUpdate
     */
    public function setUpdatedValue()
    {
       $this->setUpdated(new \DateTime());
    }

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    

    /**
     * Set comment
     *
     * @param string $comment
     * @return EproduitComments
     */
    public function setComment($comment)
    {
        $this->comment = $comment;
    
        return $this;
    }

    /**
     * Get comment
     *
     * @return string 
     */
    public function getComment()
    {
        return $this->comment;
    }

    /**
     * Set approved
     *
     * @param boolean $approved
     * @return EproduitComments
     */
    public function setApproved($approved)
    {
        $this->approved = $approved;
    
        return $this;
    }

    /**
     * Get approved
     *
     * @return boolean 
     */
    public function getApproved()
    {
        return $this->approved;
    }

     /**
     * Set approved
     *
     * @param boolean $approved
     * @return EproduitComments
     */
    
    // iscomment ==>0 isdemandedepret==>0
    public function setIsComment($iscomment)
    {
        $this->isComment = $iscomment;
    
        return $this;
    }

    /**
     * Get approved
     *
     * @return boolean 
     */
    public function getIsComment()
    {
        return $this->isComment;
    }
    
    
    /**
     * Set created
     *
     * @param \DateTime $created
     * @return EproduitComments
     */
    public function setCreated($created)
    {
        $this->created = $created;
    
        return $this;
    }

    /**
     * Get created
     *
     * @return \DateTime 
     */
    public function getCreated()
    {
        return $this->created;
    }

    /**
     * Set updated
     *
     * @param \DateTime $updated
     * @return EproduitComments
     */
    public function setUpdated($updated)
    {
        $this->updated = $updated;
    
        return $this;
    }

    /**
     * Get updated
     *
     * @return \DateTime 
     */
    public function getUpdated()
    {
        return $this->updated;
    }

   

    /**
     * Set produit
     *
     * @param \Application\EservicesBundle\Entity\Eproduit $produit
     * @return EproduitComments
     */
    public function setProduit(\Application\EservicesBundle\Entity\Eproduit $produit = null)
    {
        $this->produit = $produit;
    
        return $this;
    }

    /**
     * Get produit
     *
     * @return \Application\EservicesBundle\Entity\Eproduit 
     */
    public function getProduit()
    {
        return $this->produit;
    }
    
    
 /**
     * Set user
     *
     * @param \Application\Sonata\UserBundle\Entity\User $user
     * @return Eproduit
     */
    public function setUser(\Application\Sonata\UserBundle\Entity\User $user = null) {
        $this->user = $user;

        return $this;
    }

    /**
     * Get user
     *
     * @return \Application\Sonata\UserBundle\Entity\User 
     */
    public function getUser() {
    //    if (!isset($this->user)){$this->user=1;}
      //  else {
            return $this->user;
            
        //    }
    }
}