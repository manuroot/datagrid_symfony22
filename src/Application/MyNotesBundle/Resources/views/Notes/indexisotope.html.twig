<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
        <title>iNettuts - Welcome!</title>
    {% block stylesheets %}
        <link rel="stylesheet" href="{{ asset('bootstrap/css/bootstrap.css') }}" type="text/css" />
        <link rel="stylesheet" href="{{ asset('bootstrap/css/bootstrap-responsive.css') }}" type="text/css" />
         <link rel="stylesheet" href="{{ asset('css/jquery-ui-1.9.2.custom.css') }}" type="text/css" media="all"/>
    
        <link rel="stylesheet" href="{{ asset('bootstrap/css/bootstrap-responsive.css') }}" type="text/css" />
        <link rel="stylesheet" href="{{ asset('bundles/applicationepost/css/sliding.css') }}" type="text/css" media="all"/>



        <style>


                .isotope-item {
                    z-index: 2;
                }

                .isotope-hidden.isotope-item {
                    pointer-events: none;
                    z-index: 1;
                }

                /**** Isotope CSS3 transitions ****/

                .isotope,
                .isotope .isotope-item {
                    -webkit-transition-duration: 0.8s;
                    -moz-transition-duration: 0.8s;
                    -ms-transition-duration: 0.8s;
                    -o-transition-duration: 0.8s;
                    transition-duration: 0.8s;
                }

                .isotope {
                    -webkit-transition-property: height, width;
                    -moz-transition-property: height, width;
                    -ms-transition-property: height, width;
                    -o-transition-property: height, width;
                    transition-property: height, width;
                }

                .isotope .isotope-item {
                    -webkit-transition-property: -webkit-transform, opacity;
                    -moz-transition-property:    -moz-transform, opacity;
                    -ms-transition-property:     -ms-transform, opacity;
                    -o-transition-property:      -o-transform, opacity;
                    transition-property:         transform, opacity;
                }

                /**** disabling Isotope CSS3 transitions ****/

                .isotope.no-transition,
                .isotope.no-transition .isotope-item,
                .isotope .isotope-item.no-transition {
                    -webkit-transition-duration: 0s;
                    -moz-transition-duration: 0s;
                    -ms-transition-duration: 0s;
                    -o-transition-duration: 0s;
                    transition-duration: 0s;
                }
                div.element
                {
                    border:1px solid;
                    border-radius:5px;
                    -moz-border-radius:5px; /* Old Firefox */
                    padding-bottom:10px;
                    padding-left:10px;
                    margin-bottom:20px;
                    margin-left:10px;
                    margin-right:10px;
                    box-shadow: 7px 7px 5px #888888;
                    background-color:  #e3e3e3;
                    font-size: 12px;
                    height: auto;
                    width: 280px;
                } 
                body {
                    background-image:url("/images/ravenna.png");
                }
                div.option-combo ul {
                    width: auto;
                    height: 32px;
                    margin: 5px 0;
                    overflow: hidden;
                }
             /* ul#sort-direction li,ul#layouts li,  ul#filter li ,ul#sort-by li { height: 52px; margin-right: 2px; display: inline-block; float: left; }
            */ 
           div.option-combo ul li { height: 52px; margin-right: 2px; display: inline-block; float: left; }
              
              div.option-combo ul li a {
                    height: 30px;
                    padding: 0 10px;
                    border: 1px solid #999;
                    background: #cfcfcf;
                    color: #fff;
                    font-weight: bold;
                    line-height: 30px;
                    text-decoration: none;
                    display: block;
                }
                
                /*ul#sort-direction li a, ul#layouts li a, ul#sort-by li a,ul#filter li a {
                    height: 30px;
                    padding: 0 10px;
                    border: 1px solid #999;
                    background: #cfcfcf;
                    color: #fff;
                    font-weight: bold;
                    line-height: 30px;
                    text-decoration: none;
                    display: block;
                }*/
                div.option-combo ul  a:hover { background: #c9c9c9; }
                div.option-combo ul li.active a { background: #999; }
              /*  ul#sort-by  a:hover { background: #c9c9c9; }
                ul#sort-by  li.active a { background: #999; }
                
                ul#sort-direction a:hover { background: #c9c9c9; }
                ul#sort-direction li.active a { background: #9FFF00; }
                
                
                ul#layouts  a:hover { background: #c9c9c9; }
                ul#layouts  li.active a { background: #999; }
 */
              /*  ul#filter li a:hover { background: #c9c9c9; }
                ul#filter li.active a { background: #999; }*/
                .container > .ss-placeholder-child {
                    background: transparent;
                    border: 1px dashed blue;
                    margin-left:10px;
                    margin-right:10px;
                    /*  position: absolute;
                     height: auto;*/

                }
               #options li a:hover {
    background-color: rgb(85, 187, 255);
}
 #options li a.selected {
  background-color: #13F;
  text-shadow: none;
  color: white;
}

.yellow{
	background-color:#FDFB8C;
	border:1px solid #DEDC65;	
}

.blue{
	background-color:#A6E3FC;
	border:1px solid #75C5E7;	
}

.green{
	background-color:#A5F88B;
	border:1px solid #98E775;	
}

.red{
	background-color:#fe8b77;
	border:1px solid #98E775;	
}
            </style>
{% endblock %} 


                                
                                
                                

        </head>



        <body>

   {# <div id="head">
        <h1>LISTE DES ARTICLES</h1>
    </div>#}
            <div>

            </div>


{% use '::navbar.html.twig' %}

            <body>
                <div class="page-header">
                      {{ block('NAVIGATION_BAR') }}

                    </div>

                    <section id="options" class="clearfix">
                        <div class="option-combo">
                        {#    <h2>Filter:</h2>#}
                            <ul id="filter" class="option-set clearfix" data-option-key="filter">
                                <li><a href="#show-all" data-option-value="*" class="selected">Urgent</a></li>
                                <li><a href="#open" data-option-value=".open">Intermediaire</a></li>
                                <li><a href="#closed" data-option-value=".closed">Simple</a></li>
<li><a href="#examples" data-option-value=".unknown">A Classer</a></li>
                          </ul>
                        </div>
     {#                   <div class="option-combo">
                 <ul id="sort-by" class="option-set clearfix" data-option-key="sortBy">

                                      <li><a href="#name">name</a></li>
                                    <li><a href="#number">number</a></li>
                                    <li><a href="#star">STARS</a></li>
                                 </ul>
                        </div>#}
                            
     <div class="option-combo">
     {# <h2>Sort:</h2>#}
      <ul id="sort" class="option-set clearfix" data-option-key="sort">
        <li><a href="#mixed" data-option-value="number" class="selected">mixed</a></li>
        <li><a href="#original" data-option-value="original-order">original</a></li>
        <li><a href="#alphabetical" data-option-value="alphabetical">alphabetical</a></li>
      </ul>
    </div>
      <div class="option-combo">
     {#   <h3>Sort direction</h3>#}
    <ul id="sort-direction" class="option-set clearfix" data-option-key="sortAscending">
       
      <li><a href="#sortAscending=true" data-option-value="true" class="selected">
               <i class="icon-arrow-up"></i></a></li>
      <li><a href="#sortAscending=false" data-option-value="false">
               <i class="icon-arrow-down"></i></a></li>
    </ul>
    </div>
                            
    <div class="option-combo">
                            {#<h2>Layout: </h2>#}
                            <ul id="layouts" class="option-set clearfix" data-option-key="layoutMode">
                                <li><a href="#masonry" data-option-value="masonry" class="selected">masonry</a></li>
                                <li><a href="#fitRows" data-option-value="fitRows">fitRows</a></li>
                                <li><a href="#straightDown" data-option-value="straightDown">straightDown</a></li>
                            </ul>
                        </div>
                    </section>
  {#  <h3>Sort direction</h3>

    <ul id="sort-direction" class="option-set clearfix" data-option-key="sortAscending">
      <li><a href="#sortAscending=true" data-option-value="true" class="selected">sort ascending</a></li>
      <li><a href="#sortAscending=false" data-option-value="false">sort descending</a></li>
    </ul>

<section id="options">
    <ul class="clearfix">
      <li id="toggle-sizes"><a href="#toggle-sizes">Toggle variable sizes</a></li>
    </ul>
  </section>
#}
      {{ knp_pagination_render(pagination) }}
  <div id="container" class="clickable clearfix">
      {# <div class="container">#}
      
     
      
      
{% for entity in pagination %}
          
          <div class="element open {{ entity.color }}">  
                     
<!--<tr {% if loop.index is odd %}class="color"{% endif %}>-->
             {#% debug entities.categories%#}
   <div class="note zoomTarget {{ entity.color }}" id="{{ entity.id }}">
   <div class="bar_titre" style="width:100%;">
   <div class="categories">{{ entity.categories.nom }}</div>
   <div class="delnote"><a  class="deltsticky ui-icon ui-icon-trash" id="{{ entity.id }}" href="#"></a></div>
   </div>
   <textarea class="area-note" id="stickynote-{{ entity.id }}">{{entity.text}}</textarea>
    <div class="author"></div>
    </div>
    
    


                                        <!--   <h2 class="entry-title">-->
                                        <h5 class="sonata-blog-post-title">


                                                         <a href="#">
                          {{ entity.proprietaire }}</a>
                                                    
                                                </h5>

                                                <div class="sonata-blog-post-abtract">
                                                  {{entity.text|raw }}
                                                </div>
                                                <br>
</div>
 

         {% endfor %}
                           
  
  
</div>
          {{ knp_pagination_render(pagination) }}   
  
   


   {% block javascripts %}
         <script src="{{ asset('jquery/jquery-1.10.0.js') }}" type="text/javascript"></script>
                                                        <script type="text/javascript" src="{{ asset('jquery/jquery-ui-1.9.2.custom.min.js') }}"></script>
                           <script type="text/javascript" src="{{ asset('bootstrap/js/bootstrap.js') }}"></script>
                <script type="text/javascript" src="{{ asset('jquery/jquery.easing.1.3.js') }}"></script>
                     <script src="{{ asset('jquery/shapeshift/vendor/jquery.touch-punch.min.js') }}" type="text/javascript"></script>
          <script src="{{ asset('jquery/shapeshift/jquery.shapeshift.js') }}" type="text/javascript"></script>
                                                                                        <script type="text/javascript" src="{{ asset('jquery/jquery.raty.js') }}"></script>
                                                                                        <script type="text/javascript" src="{{ asset('js/isotope/jquery.isotope.js') }}"></script>

  {#<script type="text/javascript" src="{{ asset('jquery/main.js') }}"></script>#}
                                                                                        <script type="text/javascript">
    $(document).ready(function() {


$('.star').raty({
                                               readOnly: true,
                                               score: function() {
                                                 return $(this).attr('data-score');
                                               }
                                             });

         var $container = $('#container');
        $container.isotope({
            masonry: {
                columnWidth: 2
                },
                sortBy: 'number',
                getSortData: {
                number: function( $elem ) {
                var number = $elem.find('.star').attr('data-score');
                    return parseInt( number, 10 );
                },
               alphabetical: function( $elem ) {
                 var name = $elem.find('p > a').text();
              /* var name = $elem.find('.name'),*/
               /* itemText = name.length ? name : $elem;*/
              /* console.log("name=",name);*/
                return name;
                }
                   }
                    });
    
      
       var $optionSets = $('#options .option-set'),
       $optionLinks = $optionSets.find('a');
       $optionLinks.click(function(){
         var $this = $(this);
         // don't proceed if already selected
         if ( $this.hasClass('selected') ) {
             return false;
            }
            var $optionSet = $this.parents('.option-set');
            $optionSet.find('.selected').removeClass('selected');
            $this.addClass('selected');
            // make option object dynamically, i.e. { filter: '.my-filter-class' }
            var options = {},
            key = $optionSet.attr('data-option-key'),
            value = $this.attr('data-option-value');
            // parse 'false' as false boolean
            value = value === 'false' ? false : value;
            options[ key ] = value;
            if ( key === 'layoutMode' && typeof changeLayoutMode === 'function' ) {
                // changes in layout modes need extra logic
                changeLayoutMode( $this, options )
                } else {
                // otherwise, apply new options
                $container.isotope( options );
            }
        return false;
        });









                                                                                      /*



                                                                                      var $container = $('#container');


                                                                                       $container.find('.element').each(function(){
                                                                                              var $this = $(this),
                                                                                                  number = parseInt( $this.find('.number').text(), 10 );
                                                                                              if ( number % 7 % 2 === 1 ) {
                                                                                                $this.addClass('width2');
                                                                                              }
                                                                                              if ( number % 3 === 0 ) {
                                                                                                $this.addClass('height2');
                                                                                              }
                                                                                            });
      
                                                                                      // initialize isotope
                                                                                      $container.isotope({
                                                                                          itemSelector: '.element',
                                                                                              masonry : {
                                                                                                columnWidth : 0
                                                                                              },
                                                                                      getSortData : {
 
                                                                                        number : function ( $elem ) {
     
                                                                                          return parseInt( $elem.find('.star').text() );
                                                                                        },
 
                                                                                      }

                                                                                      });

                                                                                      $('#sort-by a').click(function(){
                                                                                        // get href attribute, minus the '#'
                                                                                        var sortName = $(this).attr('href').slice(1);
                                                                                        $('#container').isotope({ sortBy : sortName });
                                                                                        return false;
                                                                                      });

                                                                                      // filter items when filter link is clicked
                                                                                      $('#filters a').click(function(){
                                                                                        var selector = $(this).attr('data-filter');
                                                                                        $container.isotope({ filter: selector });
                                                                                        return false;
                                                                                      });
                                                                                      // change size of clicked element
                                                                                            $container.delegate( '.element', 'click', function(){
                                                                                              $(this).toggleClass('large');
                                                                                              $container.isotope('reLayout');
                                                                                            });

                                                                                            // toggle variable sizes of all elements
                                                                                            $('#toggle-sizes').find('a').click(function(){
                                                                                              $container
                                                                                                .toggleClass('variable-sizes')
                                                                                                .isotope('reLayout');
                                                                                              return false;
                                                                                            });
                                                                                      $('.star').raty({
                                                                                                                                     readOnly: true,
                                                                                                                                     score: function() {
                                                                                                                                       return $(this).attr('data-score');
                                                                                                                                     }
                                                                                                                                   });
                                             
                                                                                                                          */
                                                                                      });

                                                                                            </script>
 {% endblock %}
                                                                                            </body>
                                                                                            </html>

